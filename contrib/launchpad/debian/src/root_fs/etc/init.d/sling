#!/bin/bash
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

### BEGIN INIT INFO
# Provides:          sling
# Required-Start:    $remote_fs $syslog $named
# Required-Stop:     $remote_fs $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start sling at boot time
# Description:       Enable service provided by sling.
### END INIT INFO

. /etc/profile
export FANCYTTY=true
. /lib/lsb/init-functions
export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin
SLING_COMMON=/opt/sling/scripts/sling-common.sh
if [ -r $SLING_COMMON ] ; then
	. $SLING_COMMON
else
	log_failure_msg "Missing $SLING_COMMON file, cannot read env settings."
	exit -1
fi

PID=/var/run/sling.pid
DAEMON=$(which java)
NAME="sling"

function usage () {
	log_warning_msg "Purpose: Stop/Start sling"
	log_warning_msg "Usage  : $0 { stop | start | restart }"
}

function stop () {
	killproc -p $PID $DAEMON TERM
}

function start () {

	if [ ! "${RUNMODE}" ] ; then
		log_warning_msg "RUNMODE is not set in ${SLING_DEFAULTS}"
		exit -1
	fi

	check_sling_permissions

	SLING_JAR=${SLING_EXEC}/org.apache.sling.launchpad.jar

	log_progress_msg "Start sling daemon"
	if start-stop-daemon --start \
		--chdir "$SLING_EXEC" \
		--chuid $SLING_USER \
		--pidfile "$PID" \
		--make-pidfile \
		--background \
		--verbose \
		--no-close \
		--exec $(which java) \
		--name "$NAME" \
		--start \
		-- \
		${JAVA_ARGS} \
		${MVN_OPTS} \
		-jar ${SLING_JAR} \
		${SLING_ARGS} \
		>$START_LOG_FILE 2>&1
	then
		sleep 3
		status_of_proc -p $PID $DAEMON
	fi
	log_end_msg $?

}

if test -z "$1"; then
	usage
	exit
fi

case $1 in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		if [ -f $PID ] ; then
			stop
			while pidofproc -p $PID $DAEMON > /dev/null ; do
				sleep 1
			done
		fi
		start
	;;
	status)
		status_of_proc -p $PID $DAEMON
		;;
	*)
		echo "Unknown parameter: $1"
		usage
		;;
esac
