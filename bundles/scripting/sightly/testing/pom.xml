<?xml version="1.0"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.sling</groupId>
        <artifactId>sling</artifactId>
        <version>30</version>
        <relativePath/>
    </parent>

    <artifactId>org.apache.sling.scripting.sightly.testing</artifactId>
    <packaging>slingstart</packaging>
    <version>1.0.5-SNAPSHOT</version>

    <name>Apache Sling Scripting HTL Integration Tests</name>
    <description>This project runs the integration tests for validating the Apache Sling Scripting HTL implementation
        against the Adobe HTL TCK.
    </description>

    <scm>
        <connection>scm:svn:http://svn.apache.org/repos/asf/sling/trunk/bundles/scripting/sightly/testing</connection>
        <developerConnection>scm:svn:https://svn.apache.org/repos/asf/sling/trunk/bundles/scripting/sightly/testing</developerConnection>
        <url>http://svn.apache.org/viewvc/sling/trunk/bundles/scripting/sightly/testing</url>
    </scm>

    <properties>
        <!-- run modes for integration tests -->
        <sling.run.modes>oak_tar</sling.run.modes>

        <!-- path suffix for HTTP access to Sling -->
        <http.base.path/>

        <!-- hostname for integration tests -->
        <test.host>localhost</test.host>

        <!-- optionally exclude some integration tests  -->
        <failsafe.exclude/>

        <!--
            Set this to true to stop mvn once the integration test Jetty instance is
            started. Useful to manually test the integration testing webapp.
        -->
        <integration.test.wait>false</integration.test.wait>

        <!--
        if set to "true" this will start the launchpad with the following debug options:
            -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000

        otherwise you can provide your own debug settings
        -->
        <debug.options/>

        <jacoco.maven.plugin.version>0.7.6.201602180812</jacoco.maven.plugin.version>
        <!-- HTL modules under test versions -->
        <org.apache.sling.scripting.sightly.compiler.version>1.0.9-SNAPSHOT</org.apache.sling.scripting.sightly.compiler.version>
        <org.apache.sling.scripting.sightly.compiler.java.version>1.0.11-SNAPSHOT</org.apache.sling.scripting.sightly.compiler.java.version>
        <org.apache.sling.scripting.sightly.version>1.0.35-SNAPSHOT</org.apache.sling.scripting.sightly.version>
        <org.apache.sling.scripting.sightly.js.provider.version>1.0.23-SNAPSHOT</org.apache.sling.scripting.sightly.js.provider.version>
        <org.apache.sling.scripting.sightly.models.provider.version>1.0.7-SNAPSHOT</org.apache.sling.scripting.sightly.models.provider.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}</directory>
                            <includes>
                                <include>derby.log</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>http.port</portName>
                                <portName>sling.control.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>%regex[.*LaunchpadReadyIT.*]</include>
                        <include>%regex[.*SlingSpecificsSightlyIT.*]</include>
                        <include>%regex[.*TestsRunner.*]</include>
                        <include>%regex[.*PerformanceIT.*]</include>
                    </includes>
                    <dependenciesToScan>
                        <dependency>io.sightly:io.sightly.tck</dependency>
                    </dependenciesToScan>
                    <runOrder>alphabetical</runOrder>
                    <excludes>
                        <exclude>${failsafe.exclude}</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <io.sightly.tck.serverURL>http://${test.host}:${http.port}</io.sightly.tck.serverURL>
                        <launchpad.http.server.url>http://${test.host}:${http.port}/</launchpad.http.server.url>
                        <launchpad.servlet.context>${http.base.path}</launchpad.servlet.context>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.sling</groupId>
                <artifactId>slingstart-maven-plugin</artifactId>
                <version>1.7.0</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>start-container</id>
                        <goals>
                            <goal>start</goal>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <usePomDependencies>true</usePomDependencies>
                    <servers>
                        <server>
                            <port>${http.port}</port>
                            <controlPort>${sling.control.port}</controlPort>
                            <runmode>${sling.run.modes}</runmode>
                            <contextPath>${http.base.path}</contextPath>
                            <debug>${debug.options}</debug>
                        </server>
                    </servers>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!--
                This profile allows running code coverage reports for the integration tests. In addition, if the other modules have been
                built from the reactor, their jacoco reports will be merged to produce a report containing coverage information about
                both unit and integration tests.

                By default the latest snapshots will be used for generating the report. If, however, you want to run the report on
                released versions then this can be achieved with the following command:

                mvn clean verify -Pcoverage-report \
                    -Dorg.apache.sling.scripting.sightly.compiler.version=1.0.2 \
                    -Dorg.apache.sling.scripting.sightly.compiler.java.version=1.0.4 \
                    -Dorg.apache.sling.scripting.sightly.version=1.0.26 \
                    -Dorg.apache.sling.scripting.sightly.js.provider.version=1.0.16 \
                    -Dorg.apache.sling.scripting.sightly.models.provider.version=1.0.4

            -->
            <id>coverage-report</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <failsafe.exclude>%regex[.*PerformanceIT.*]</failsafe.exclude>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.10</version>
                        <configuration>
                            <includeArtifactIds>
                                org.apache.sling.scripting.sightly.compiler,
                                org.apache.sling.scripting.sightly.compiler.java,
                                org.apache.sling.scripting.sightly,
                                org.apache.sling.scripting.sightly.js.provider,
                                org.apache.sling.scripting.sightly.models.provider
                            </includeArtifactIds>
                            <failOnMissingClassifierArtifact>true</failOnMissingClassifierArtifact>
                        </configuration>
                        <executions>
                            <execution>
                                <id>copy-compiled-classes</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>../compiler/target/</directory>
                                            <includes>
                                                <include>jacoco.exec</include>
                                            </includes>
                                            <targetPath>compiler-jacoco</targetPath>
                                        </resource>
                                        <resource>
                                            <directory>../java-compiler/target/</directory>
                                            <includes>
                                                <include>jacoco.exec</include>
                                            </includes>
                                            <targetPath>java-compiler-jacoco</targetPath>
                                        </resource>
                                        <resource>
                                            <directory>../engine/target/</directory>
                                            <includes>
                                                <include>jacoco.exec</include>
                                            </includes>
                                            <targetPath>engine-jacoco</targetPath>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.sling</groupId>
                        <artifactId>slingstart-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <goals>
                                    <goal>start</goal>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <usePomDependencies>true</usePomDependencies>
                            <servers>
                                <server>
                                    <port>${http.port}</port>
                                    <controlPort>${sling.control.port}</controlPort>
                                    <runmode>${sling.run.modes}</runmode>
                                    <contextPath>${http.base.path}</contextPath>
                                    <debug>${jacoco.agent}</debug>
                                </server>
                            </servers>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>jacoco.agent</propertyName>
                                    <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>merge-reports</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>jacoco-it.exec</include>
                                                <include>compiler-jacoco/jacoco.exec</include>
                                                <include>java-compiler-jacoco/jacoco.exec</include>
                                                <include>engine-jacoco/jacoco.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>final-report</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/apache/sling/scripting/sightly/**/*</include>
                                    </includes>
                                    <excludes>
                                        <exclude>org/apache/sling/scripting/sightly/impl/parser/expr/generated/**/*</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>check-coverage</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>org/apache/sling/scripting/sightly/**/*</include>
                                    </includes>
                                    <excludes>
                                        <exclude>org/apache/sling/scripting/sightly/impl/parser/expr/generated/**/*</exclude>
                                    </excludes>
                                    <rules>
                                        <rule>
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit>
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>0.80</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>oss-sonatype</id>
            <name>OSS Sonatype</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </repository>
    </repositories>

    <dependencies>

        <!-- The integration tests -->
        <dependency>
            <groupId>io.sightly</groupId>
            <artifactId>io.sightly.tck</artifactId>
            <version>1.3.4</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Launchpad dependencies -->
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.scripting.sightly.compiler</artifactId>
            <version>${org.apache.sling.scripting.sightly.compiler.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.scripting.sightly.compiler.java</artifactId>
            <version>${org.apache.sling.scripting.sightly.compiler.java.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.scripting.sightly</artifactId>
            <version>${org.apache.sling.scripting.sightly.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.scripting.sightly.js.provider</artifactId>
            <version>${org.apache.sling.scripting.sightly.js.provider.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.scripting.sightly.models.provider</artifactId>
            <version>${org.apache.sling.scripting.sightly.models.provider.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Dependencies for the Test Build and Run -->
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.commons.testing</artifactId>
            <version>2.0.24</version>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit-dep</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.testing.rules</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Dependency for running Sling performance tests -->
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.performance.base</artifactId>
            <version>1.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
