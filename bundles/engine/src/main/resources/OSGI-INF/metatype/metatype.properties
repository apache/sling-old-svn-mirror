#
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.
#


#
# This file contains localization strings for configuration labels and
# descriptions as used in the metatype.xml descriptor generated by the
# the Sling SCR plugin

#
# SlingMainServlet. The configuration of the SlingMainServlet
sling.name = Apache Sling Main Servlet
sling.description = Main processor of the Sling framework controlling all \
 aspects of processing requests inside of Sling, namely authentication, \
 resource resolution, servlet/script resolution and execution of servlets \
 and scripts.
sling.max.calls.name = Number of Calls per Request
sling.max.calls.description = Defines the maximum number of Servlet and Script \
 calls while processing a single client request. This number should be high \
 enough to not limit request processing artificially. On the other hand it \
 should not be too high to allow the mechanism to limit the resources required \
 to process a request in case of errors. The default value is 1000.
sling.max.inclusions.name = Recursion Depth
sling.max.inclusions.description = The maximum number of recursive Servlet and \
 Script calls while processing a single client request. This number should not \
 be too high, otherwise StackOverflowErrors may occurr in case of erroneous \
 scripts and servlets. The default value is 50. 
sling.trace.allow.name = Allow the HTTP TRACE method
sling.trace.allow.description = If set to true, the HTTP TRACE method will be \
 enabled. By default the HTTP TRACE methods is disabled as it can be used in \
 Cross Site Scripting attacks on HTTP servers.
sling.max.record.requests.name = Number of Requests to Record
sling.max.record.requests.description = Defines the number of requests that \
 internally recorded for display on the "Recent Requests" Web Console page. If \
 this value is less than or equal to zero, no requests are internally kept. The \
 default value is 20. 
sling.store.pattern.requests.name = Recorded Request Path Patterns
sling.store.pattern.requests.description = One or more regular expressions which \
 limit the requests which are stored by the "Recent Requests" Web Console page.
sling.filter.compat.mode.name = Filter Compat Mode
sling.filter.compat.mode.description = This switch controls the handling of \
 servlet filters. By default only filters with a scope property are registered. \
 In compat mode, the scope property is not required.
sling.serverinfo.name = Server Info
sling.serverinfo.description = The server info returned by Sling. If this field \
 is left empty, Sling generates a default into.

#
# Request Loggger Filter
request.log.name = Apache Sling Request Logger
request.log.description = Configures the main loggers of the request logger, \
 namely the request log and the access log. Further loggers may be configured \
 by creating configurations for the Request Logger Service.
request.log.output.name = Request Log Name
request.log.output.description = Name of the destination for the request log. \
 The request log logs the entry and exit of each request into and \
 out of the system together with the entry time, exit time, time to process \
 the request, a request counter as well as the final status code and response \
 content type. In terms of Request Logger Service formats, request entry is \
 logged with the format "%t [%R] -> %m %U%q %H" and request exit is logged \
 with the format "%{end}t [%R] <- %s %{Content-Type}o %Dms".
request.log.outputtype.name = Request Log Type
request.log.outputtype.description = Type of request log destination. Select \
 "Logger Name" to write the access log to an SLF4J logger, "File Name" to \
 write the access log to a file (relative paths resolved against sling.home) \
 or "RequestLog Service" to use a named OSGi service registered with the \
 service interface "org.apache.sling.engine.RequestLog" and a service property \
 "requestlog.name" equal to the Logger Name setting.
request.log.enabled.name = Enable Request Log
request.log.enabled.description = Whether to enable Request logging or not.
access.log.output.name = Access Log Name
access.log.output.description = Name of the destination for the request log. \
 The access log writes an entry for each request as the request terminates \
 using the NCSA extended/combined log format. In terms of Request Logger \
 Service formats the access log is written with the format \
 "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"".
access.log.outputtype.name = Access Log Type
access.log.outputtype.description = Type of access log destination. Select \
 "Logger Name" to write the access log to an SLF4J logger, "File Name" to \
 write the access log to a file (relative paths resolved against sling.home) \
 or "RequestLog Service" to use a named OSGi service registered with the \
 service interface "org.apache.sling.engine.RequestLog" and a service property \
 "requestlog.name" equal to the Logger Name setting.
access.log.enabled.name = Enable Access Log
access.log.enabled.description = Whether to enable Access logging or not.


#
# RequestLoggerService (factory)
request.log.service.name = Apache Sling Customizable Request Data Logger
request.log.service.description = This configuration creates customizable \
 loggers for request content. Each configuration results in a logger writing \
 the requested data. Deleting an existing configuration removes the respective \
 logger.
request.log.service.onentry.name = Request Entry
request.log.service.onentry.description = Check if the logger is called on \
 request entry. Otherwise leave unchecked and the logger will be called on \
 request exit (aka termination), which is the default for access logger type \
 loggers.
request.log.service.format.name = Log Format
request.log.service.format.description = The format for log entries. This is \
 a format string as defined at http://sling.apache.org/site/client-request-logging.html#ClientRequestLogging-LogFormatSpecification.
request.log.service.output.name = Logger Name
request.log.service.output.description = Name of the destination for the log \
 output. Depending on the output type this is a file name (absolute or \
 relative), a SLF4J logger name or the name under which a RequestLog service \
 has been registered.
request.log.service.outputtype.name = Logger Type
request.log.service.outputtype.description = Type of log destination. Select \
 "Logger Name" to write the access log to an SLF4J logger, "File Name" to \
 write the access log to a file (relative paths resolved against sling.home) \
 or "RequestLog Service" to use a named OSGi service registered with the \
 service interface "org.apache.sling.engine.RequestLog" and a service property \
 "requestlog.name" equal to the Logger Name setting.


#
# RequestProgressTrackerLogFilter
rpt.log.name = Apache Sling Request Progress Tracker Log Filter
rpt.log.description = Filter that enables logging of request progress tracker \
 information. To enable the log output, the category \
 org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter needs to be \
 logged on debug level.
extensions.name = Extension filter
extensions.description = Only requests with the listed extensions will be logged. \
 If no extensions are configured all requests are logged. Empty by default.
minDurationMs.name = Min duration (ms)
minDurationMs.description = Only requests that take at least the minimum duration \
 in milliseconds are logged. Default is 0.
maxDurationMs.name = Max duration (ms)
maxDurationMs.description = Only requests that take at most the maximum duration \
 in milliseconds are logged. Default is 2147483647, i.e. Integer.MAX_VALUE.
compactLogFormat.name = Compact Log Format
compactLogFormat.description = Whether or not to use the compact format. In compact \
 one log entry is logged per request, detailing the request progress tracker \
 information in individual lines, like stack-traces. This keeps log files smaller \
 and makes them more readable. In the older (non-compact) format, one log entry is \
 printed per line, thus potentially containing more noise. Default is false.
