<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.sling</groupId>
    <artifactId>sling</artifactId>
    <version>1-incubator-SNAPSHOT</version>
    <relativePath>../../parent/pom.xml</relativePath>
  </parent>

  <artifactId>org.apache.sling.usling.webapp</artifactId>
  <packaging>war</packaging>
  <version>2.0.0-incubator-SNAPSHOT</version>

  <name>µsling Web Application</name>
  <description>
    The µsling webapp packages the standard µsling components in a Sling
    web application. See SLING-149. 
  </description>

  <scm>
    <connection>scm:svn:http://svn.apache.org/repos/asf/incubator/sling/trunk/usling/usling-webapp</connection>
    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/incubator/sling/trunk/usling/usling-webapp</developerConnection>
    <url>http://svn.apache.org/viewvc/incubator/sling/trunk/usling/usling-webapp</url>
  </scm>

  <properties>
    <!--
      Jetty default port (override with -D)
    -->
    <http.port>8080</http.port>

    <!--
      Disable Jetty webapp rescan (override with -D) 
    -->
    <jetty.scan.interval.seconds>0</jetty.scan.interval.seconds>
  </properties>

  <build>
    <plugins>

    <plugin>
      <!-- 
        The clean plugin deletes the sling work directory as well,
        to avoid confusion with leftovers from previous runs
      -->
      <artifactId>maven-clean-plugin</artifactId>
      <configuration>
        <filesets>
          <fileset>
            <directory>sling</directory>
          </fileset>
        </filesets>
      </configuration>
    </plugin>

    <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.5</version>
        <configuration>
          <contextPath>/</contextPath>
          <scanIntervalSeconds>${jetty.scan.interval.seconds}</scanIntervalSeconds>
          
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8080</port>
              <maxIdleTime>60000</maxIdleTime>
              <port>${http.port}</port>
            </connector>
          </connectors>
          
          <!-- 
            Use target/... as the webapp source, as we unpack stuff there from the
            Sling launcher modules
          -->
          <webAppSourceDirectory>target/${artifactId}-${pom.version}</webAppSourceDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <!-- Unpack the sling-app launcher for inclusion in the web app -->
            <id>unpack-dependencies</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>org.apache.sling.launcher.app,servlet</includeArtifactIds>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${project.build.directory}/launcher-app</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
            </configuration>
          </execution>
          <execution>
            <!-- Copy bundles that must be initially installed to WEB-INF/resources/bundles -->
            <id>copy-dependencies</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/resources/bundles</outputDirectory>
              <excludeTransitive>true</excludeTransitive>
              
              <!-- List artifact names of bundles to install here -->
              <includeArtifactIds>org.apache.sling.usling.servlets</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Include sling-app launcher classes and resources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <!-- the classes (except unneeded Main) -->
            <resource>
              <directory>${basedir}/target/launcher-app</directory>
              <targetPath>WEB-INF/classes</targetPath>
              <excludes>
                <exclude>org/apache/sling/launcher/app/main/**</exclude>
                <exclude>resources/bundles/org.apache.felix.http.jetty*.jar</exclude>
                <exclude>resources/bundles/org.apache.felix.commons.servlet-api*.jar</exclude>
              </excludes>
              <includes>
                <include>org/**</include>
              </includes>
            </resource>
            <!-- the configuration resources -->
            <resource>
              <directory>${basedir}/target/launcher-app</directory>
              <targetPath>WEB-INF</targetPath>
              <includes>
                <include>resources/**</include>
                <include>sling.properties</include>
                <include>sling_install.properties</include>
                <include>jre-*.properties</include>
              </includes>
              <excludes>
                <exclude>resources/bundles/org.apache.felix.http.jetty*.jar</exclude>
                <exclude>resources/bundles/org.apache.felix.commons.servlet-api*.jar</exclude>
              </excludes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <version>0.9.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.framework</artifactId>
      <version>1.1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.launcher.webapp</artifactId>
      <version>2.0.0-incubator-SNAPSHOT</version>
      <classifier>classes</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.launcher.app</artifactId>
      <version>2.0.0-incubator-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.equinox.http</groupId>
      <artifactId>servlet</artifactId>
      <version>1.0.0-v20070606</version>
      <scope>provided</scope>
    </dependency>

    <!-- The servlet container will have to provide these API classes -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.usling.servlets</artifactId>
      <version>2.0.0-incubator-SNAPSHOT</version>
    </dependency>
    
  </dependencies>

</project>
